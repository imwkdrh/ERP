package chapter2;

// 기타 제어자 (비접근 제어자) : 접근 제어와 무관하게 동작을 제어하는 것

//	final 제어자
//	- 클래스 : final 제어자가 붙은 클래스는 확장 할 수 없음
//	- 메서드 : final 제어자가 붙은 메서드는 재정의(오버라이드) 할 수 없음
//	- 변수 : final 제어자가 붙은 변수는 재할당 할 수 없음

final class FinalClass{
	int number;
	
}

//class SubFinalClass extends FinalClass{
//	
//}

class FinalMethodClass{
	final void finalMethod() {
		
	}
}
class SubFinalMehtodClass extends FinalMethodClass{
//	@Override
//	void finalMehtod() {
//		
//	}
}
class FinalVariableClass{
	final int number=10;
	void method() {
		//number =20;
	}
}


//	static 제어자
//- 메서드 : static 제어자가 붙은 메서드는 인스턴스 생성없이 클래스로 바로 호출가능
//- 변수 : static 제어자가 붙은 필드는 인스턴스 생성없이 클래스로 바로 접근 가능
class StaticClass{
	static int number;
	static void method() {};
}

//	제어자 조합
class ModifierCombination{
	//	public + static + final의 변수, 필드
	public static final int NUMBER = 10;
}



public class Modifier {
	public static void main(String[] args) {
		StaticClass.number=10;
		StaticClass.method();
	}
}


















